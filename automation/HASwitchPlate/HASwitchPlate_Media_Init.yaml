# Button text/font
- alias: HASwitchPlate_Media_Init
  trigger:
  - platform: mqtt
    topic: 'homeassistant/binary_sensor/HASwitchPlate/state'
    payload: 'ON'
  - platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[6].font'
      payload: '4'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[7].font'
      payload: '4'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[8].font'
      payload: '4'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[6].txt'
      payload: '"9"'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[7].txt'
      payload: '";"'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[8].txt'
      payload: '":"'

# Play/Pause button action
- alias: HASwitchPlate_Media_PauseButton7
  trigger:
    platform: mqtt
    topic: 'homeassistant/haswitchplate/HASwitchPlate/state/p[8].b[7]'
    payload: 'ON'
  action:
    service: media_player.media_play_pause
    entity_id: media_player.office_home

# Prev Track button action
- alias: HASwitchPlate_Media_PrevTrackButton6
  trigger:
    platform: mqtt
    topic: 'homeassistant/haswitchplate/HASwitchPlate/state/p[8].b[6]'
    payload: 'ON'
  action:
    service: media_player.media_previous_track
    entity_id: media_player.office_home

# Next Track button action
- alias: HASwitchPlate_Media_NextTrackButton8
  trigger:
    platform: mqtt
    topic: 'homeassistant/haswitchplate/HASwitchPlate/state/p[8].b[8]'
    payload: 'ON'
  action:
    service: media_player.media_next_track
    entity_id: media_player.office_home

# Scale media information fonts to fit
# 0 consolas 24 - 20 chars x 2 lines (wrapped)
# 1 consolas 32 - 15 chars x 2 lines (wrapped)
# 2 consolas 48 - 10 chars x 1 line
# 3 consolas 80 - 6 chars x 1 line
- alias: HASwitchPlate_Media_Artist
  trigger:
  - platform: state
    entity_id: sensor.media_player_artist
  - platform: mqtt
    topic: 'homeassistant/binary_sensor/HASwitchPlate/state'
    payload: 'ON'
  - platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[4].font'
      payload_template: '{% if states.media_player.office_home.attributes.media_artist|length <= 6 -%}3{% elif (states.media_player.office_home.attributes.media_artist|length > 6) and (states.media_player.office_home.attributes.media_artist|length <= 10) %}2{% elif (states.media_player.office_home.attributes.media_artist|length > 10) and (states.media_player.office_home.attributes.media_artist|length <= 15) %}1{% else %}0{%- endif %}'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[4].txt'
      payload_template: '"{{ states.media_player.office_home.attributes.media_artist|wordwrap(20, wrapstring="\\r") }}"'

- alias: HASwitchPlate_Media_Title
  trigger:
  - platform: state
    entity_id: sensor.media_player_title
  - platform: mqtt
    topic: 'homeassistant/binary_sensor/HASwitchPlate/state'
    payload: 'ON'
  - platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[5].font'
      payload_template: '{% if states.media_player.office_home.attributes.media_title|length <= 6 -%}3{% elif (states.media_player.office_home.attributes.media_title|length > 6) and (states.media_player.office_home.attributes.media_title|length <= 10) %}2{% elif (states.media_player.office_home.attributes.media_title|length > 10) and (states.media_player.office_home.attributes.media_title|length <= 15) %}1{% else %}0{%- endif %}'
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[5].txt'
      payload_template: '"{{ states.media_player.office_home.attributes.media_title|wordwrap(20, wrapstring="\\r") }}"'

- alias: HASwitchPlate_Media_PlayPause
  trigger:
  - platform: state
    entity_id: media_player.office_home
  action:
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[7].txt'
      payload_template: "\"{%- if is_state('media_player.office_home', 'playing') %};{% elif is_state('media_player.office_home', 'paused') %}4{% endif -%}\""

# Volume slider value published, apply published state
- alias: HASwitchPlate_Media_VolSliderUpdateHass
  trigger:
    platform: mqtt
    topic: 'homeassistant/haswitchplate/HASwitchPlate/state/p[8].b[9].val'
  action:
  - service: media_player.volume_set
    data_template:
      entity_id: media_player.office_home
      volume_level: '{{ (trigger.payload|int) / 100 }}'

# Volume slider value changed by hass, update HASP
- alias: HASwitchPlate_Media_VolSliderUpdateHASP
  trigger:
  - platform: state
    entity_id: sensor.media_player_volume
  - platform: mqtt
    topic: 'homeassistant/binary_sensor/HASwitchPlate/state'
    payload: 'ON'
  - platform: homeassistant
    event: start
  action:
  - service: mqtt.publish
    data:
      topic: 'homeassistant/haswitchplate/HASwitchPlate/command/p[8].b[9].val'
      payload_template: '{{ (states.media_player.office_home.attributes.volume_level * 100)|int }}'
