  - alias: 'Garage Opened Log'

    trigger:
      - platform: state
        entity_id:
          - cover.garage_door_opener
          - cover.garage_door_opener_right
        from: 'closed'
        to: 'open'
        for: '00:05:00'

    action:
      - service: logbook.log
        data_template:
          name: Garage_Doors
          message: Doors Opened longer than 5 min

      #- service_template: >
      #   {% set hour=states("sensor.time").split(':')[0] | int %}
      #   {% if hour >= 7 and hour <= 9 and states.input_boolean.school_mode.state == 'on'%}
      #     input_boolean.turn_off
      #   {% else %}
      #      input_boolean.turn_on
      #   {% endif %}
      #  entity_id: input_boolean.alert_mode

  - alias: 'Office Motion'
    trigger:
      - platform: state
        entity_id: binary_sensor.office_motion
        to: 'on'
    condition:
      condition: state
      entity_id: input_boolean.alert_mode
      state: 'on'
    action:
      - service: input_boolean.turn_off
        entity_id:
          - input_boolean.alert_mode

      - service: script.speech_engine
        data_template:
          DoorOpened: "Welcome to the office"
          #call_no_announcement: 1

  - alias: 'Ring Doorbell Activity'
    hide_entity: True
    trigger:
      - platform: state
        entity_id: binary_sensor.ring_front_door_ding
        to: 'on'
    action:
      - service: script.ring_pressed

  - alias: 'Reset Alert Mode'
    trigger:
      - platform: state
        entity_id: input_boolean.alert_mode
        to: 'off'
        for:
          minutes: 25
    action:
      - service: input_boolean.turn_on
        entity_id: input_boolean.alert_mode

  - alias: Known person in front of my door
    trigger:
      - platform: event
        event_type: image_processing.detect_face
        event_data:
          entity_id: image_processing.microsoftface_foscam
          name: 'Toby'
    action:
      - service: logbook.log
        data_template:
          name: Toby
          message: Toby is detected


  #- alias: 'Office Motion pushbullet'
  #  trigger:
  #    - platform: state
  #      entity_id:
  #        - binary_sensor.office_motion
  #      to: 'on'
    #action:
    #  - service: notify.my_pushbullet
    #    data_template:
    #      title: "HASSIO"
    #      message: "Temperature is {{states('sensor.garage_temp')}}."
