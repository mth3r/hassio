      name: Demo Floorplan
      image: /local/custom_ui/floorplan/floorplan.svg
      stylesheet: /local/custom_ui/floorplan/floorplan.css

      # These options are optional
      # warnings:                  # enable warnings (to find out why things might ot be working correctly)
      # pan_zoom:                  # enable experimental panning / zooming
      hide_app_toolbar:          # hide the application toolbar (when used as a custom panel)
      # date_format: DD-MMM-YYYY   # Date format to use in hover-over text

      last_motion_entity: sensor.template_last_motion
      last_motion_class: last-motion

      groups:
        - name: Sensors
          entities:
             - sensor.netatmo_outdoor_temperature
             - sensor.netatmo_main_level_temperature
             - sensor.dark_sky_temperature
             - sensor.garage_temp
             - sensor.office_temp
          #text_template: '${entity.state ? entity.state : "unknown"}'
          # An example of rounding up a number, i.e. a temperature of 90.1 becomes 91
          #text_template: '${entity.state ? Math.ceil(entity.state) : "undefined"}'
          class_template: '
            var temp = parseFloat(entity.state.replace("Â°", ""));
            if (temp < 40)
              return "temp-low";
            else if (temp < 80)
              return "temp-medium";
            else
              return "temp-high";
            '

        - name: Lights
          entities:
             - switch.back_flood
             - switch.front_porch
             - switch.piano_back
             - switch.piano_front
             - switch.sunroom
             - switch.kitchen_front
             - switch.kitchen_back
             - switch.dining_room
             - switch.kitchen_patio
             - switch.sunroom_flood
          states:
            - state: 'on'
              class: 'light-on'
            - state: 'off'
              class: 'light-off'
          action:
            domain: homeassistant   # This optional parameter allows you to use other services such as homeassistant.toggle like here.
            service: toggle
        - name: Cameras
          entities:
            - camera.front_door
            - camera.kitchen
          states:
            - state: 'idle'
              class: 'camera-idle'
        - name: Media Players
          entities:
            - media_player.chromecast_kitchen
            - media_player.family_room_home
            - media_player.living_room_home
            - media_player.office_home
            - media_player.sunroom_speakers
            - media_player.treadmill
          states:
            - state: 'off'
              class: 'squeezebox-off'
            - state: 'idle'
              class: 'squeezebox-off'
            - state: 'paused'
              class: 'squeezebox-off'
            - state: 'playing'
              class: 'squeezebox-on'

        - name: Media Players Button
          elements:
            - media_players_button
          action:
            domain: class
            service: toggle
            data:
              elements:
                - media_players_layer
              classes:
                - layer-visible
                - layer-hidden
              default_class: layer-hidden

        - name: Lights Button
          elements:
            - lights_button
          action:
            domain: class
            service: toggle
            data:
              elements:
                - lights_layer
              classes:
                - layer-visible
                - layer-hidden
              default_class: layer-visible

        - name: Cameras Button
          elements:
            - cameras_button
          action:
            domain: class
            service: toggle
            data:
              elements:
                - cameras_layer
              classes:
                - layer-visible
                - layer-hidden
              default_class: layer-hidden

        - name: Data Button
          elements:
            - data_button
          action:
            domain: class
            service: toggle
            data:
              elements:
                - data_layer
              classes:
                - layer-visible
                - layer-hidden
              default_class: layer-visible

        - name: Alarm Button
          elements:
            - alarm_button
          action:
            domain: class
            service: toggle
            data:
              elements:
                - alarm_button
              classes:
                - alarm-disarmed
                - alarm-armed
              default_class: alarm-disarmed
#        - name: thermostat_temp
#          entities:
#            - climate.downstairs
#            - climate.upstairs
#          text_template: '${entity.attributes.current_temperature ? entity.attributes.current_temperature : "undefined"}'
#
# The above text_template uses extended attributes from the climate.* objects to get current temperature.

        - name: text_states
          entities:
             -  device_tracker.mhertz_mlu_iphone
             -  device_tracker.mhertz_jlu_iphone
             -  device_tracker.mhertz_iphone
             -  sensor.floorplan_date
             -  sensor.floorplan_time
             -  sensor.dark_sky_daily_high_temperature
             -  sensor.dark_sky_daily_high_temperature_1
             -  sensor.dark_sky_daily_high_temperature_2
             -  sensor.dark_sky_daily_high_temperature_3
             -  sensor.dark_sky_daily_low_temperature
             -  sensor.dark_sky_daily_low_temperature_1
             -  sensor.dark_sky_daily_low_temperature_2
             -  sensor.dark_sky_daily_low_temperature_3
             -  sensor.dark_sky_summary
             -  sensor.dark_sky_hourly_summary
#          text_template: '${entity.state ? entity.state.replace(/\s{2,}/g,"") : "undefined"}'
#
# The above text_template uses jQuery syntax to search and replace any instance of 2 consecutive (or more) spaces in a string of text.
